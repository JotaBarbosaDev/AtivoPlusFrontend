<!DOCTYPE html>
<html lang="pt" class="dark">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - AtivosPlus</title>

    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            100: '#e0f2fe',
                            200: '#bae6fd',
                            300: '#7dd3fc',
                            400: '#38bdf8',
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                            800: '#075985',
                            900: '#0c4a6e',
                            950: '#082f49'
                        },
                        gray: {
                            50: '#f8fafc',
                            100: '#f1f5f9',
                            200: '#e2e8f0',
                            300: '#cbd5e1',
                            400: '#94a3b8',
                            500: '#64748b',
                            600: '#475569',
                            700: '#334155',
                            800: '#1e293b',
                            900: '#0f172a',
                            950: '#020617'
                        }
                    },
                    fontFamily: {
                        sans: ['Inter', 'system-ui', 'sans-serif'],
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-up': 'slideUp 0.3s ease-out',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(10px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' },
                        }
                    },
                    boxShadow: {
                        'soft': '0 2px 8px -2px rgba(0, 0, 0, 0.2)',
                        'medium': '0 4px 16px -4px rgba(0, 0, 0, 0.3)',
                        'large': '0 8px 32px -8px rgba(0, 0, 0, 0.4)',
                    }
                }
            }
        };
    </script>

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">

    <style>
        * {
            scrollbar-width: thin;
            scrollbar-color: #475569 #1e293b;
        }

        *::-webkit-scrollbar {
            width: 6px;
            height: 6px;
        }

        *::-webkit-scrollbar-track {
            background: #1e293b;
            border-radius: 3px;
        }

        *::-webkit-scrollbar-thumb {
            background: #475569;
            border-radius: 3px;
        }

        *::-webkit-scrollbar-thumb:hover {
            background: #64748b;
        }

        .glass-effect {
            background: rgba(15, 23, 42, 0.8);
            backdrop-filter: blur(16px);
            border: 1px solid rgba(148, 163, 184, 0.1);
        }

        .card-hover {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .card-hover:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2), 0 10px 10px -5px rgba(0, 0, 0, 0.1);
        }

        .gradient-text {
            background: linear-gradient(135deg, #0ea5e9, #06b6d4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
    </style>
    @RenderSection("Styles", required: false)
</head>

<body class="bg-gray-950 text-gray-100 font-sans antialiased">
    <!-- Navigation -->
    <nav class="fixed top-0 z-50 w-full glass-effect border-b border-gray-800">
        <div class="px-6 py-4">
            <div class="flex items-center justify-between">
                <!-- Logo -->
                <div class="flex items-center space-x-3">
                    <div
                        class="w-8 h-8 bg-gradient-to-br from-primary-500 to-primary-600 rounded-lg flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                        </svg>
                    </div>
                    <span class="text-xl font-bold gradient-text">AtivosPlus</span>
                </div>

                <!-- Navigation Links -->
                <div class="hidden md:flex items-center space-x-1">
                    <a href="/Geral"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Geral") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                        </svg>
                        Dashboard
                    </a>
                    <a href="/Ativos"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Ativos") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z">
                            </path>
                        </svg>
                        Ativos
                    </a>
                    <a href="/Carteira"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Carteira") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z">
                            </path>
                        </svg>
                        Carteiras
                    </a>
                    <a href="/Mercado"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Mercado") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z">
                            </path>
                        </svg>
                        Mercado
                    </a>
                </div>

                <!-- User Menu -->
                <div class="flex items-center space-x-4">
                    <!-- Search -->
                    <button class="p-2 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </button>

                    <!-- Notifications -->
                    <button
                        class="relative p-2 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 17h5l-5 5v-5zM12 14.5V7a3 3 0 00-6 0v7.5M18 21H6a2 2 0 01-2-2v-1a2 2 0 012-2h12a2 2 0 012 2v1a2 2 0 01-2 2z">
                            </path>
                        </svg>
                        <span class="absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full"></span>
                    </button>

                    <!-- Profile -->
                    <div class="flex items-center space-x-3">
                        <img class="w-8 h-8 rounded-full ring-2 ring-gray-700"
                            src="https://ui-avatars.com/api/?name=User&background=0ea5e9&color=fff" alt="Avatar">
                    </div>

                    <!-- Mobile menu button -->
                    <button class="md:hidden p-2 text-gray-400 hover:text-white hover:bg-gray-800 rounded-lg"
                        onclick="toggleMobileMenu()">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Mobile Menu -->
            <div id="mobile-menu" class="hidden md:hidden mt-4 pb-4 border-t border-gray-700">
                <div class="flex flex-col space-y-2 pt-4">
                    <a href="/Geral"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Geral") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        Dashboard
                    </a>
                    <a href="/Ativos"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Ativos") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        Ativos
                    </a>
                    <a href="/Carteira"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Carteira") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        Carteiras
                    </a>
                    <a href="/Mercado"
                        class="px-4 py-2 rounded-lg text-sm font-medium transition-colors @(Context.Request.Path.Value.Contains("/Mercado") ? "bg-primary-600 text-white" : "text-gray-300 hover:text-white hover:bg-gray-800")">
                        Mercado
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="pt-20 min-h-screen">
        @RenderBody()
    </main>

    <!-- Scripts -->
    <script>
        // Smooth scrolling
        document.documentElement.style.scrollBehavior = 'smooth';

        // Mobile menu toggle
        function toggleMobileMenu() {
            const mobileMenu = document.getElementById('mobile-menu');
            mobileMenu.classList.toggle('hidden');
        }

        // Add loading states
        document.addEventListener('DOMContentLoaded', function () {
            // Animate cards on load
            const cards = document.querySelectorAll('.card-hover');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    card.style.transition = 'all 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
