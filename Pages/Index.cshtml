@page
@model AtivoPlusFrontend.Pages.Pages_Index
@{
  ViewData["Title"] = "Login - AtivosPlus";
  Layout = null;
}

<!DOCTYPE html>
<html lang="pt" class="dark">

<head>
  <meta charset="utf-8" />
  <meta <button type="submit" id="submitButton"
    class="w-full py-3 px-4 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white font-medium rounded-lg transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 focus:ring-offset-gray-900 shadow-lg hover:shadow-xl">
  <span class="flex items-center justify-center">
    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
        d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013 3v1">
      </path>
    </svg>
    Entrar
  </span>
  </button>port" content="width=device-width, initial-scale=1.0" />
  <title>@ViewData["Title"]</title>

  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#f0f9ff',
              100: '#e0f2fe',
              200: '#bae6fd',
              300: '#7dd3fc',
              400: '#38bdf8',
              500: '#0ea5e9',
              600: '#0284c7',
              700: '#0369a1',
              800: '#075985',
              900: '#0c4a6e',
              950: '#082f49'
            }
          },
          fontFamily: {
            sans: ['Inter', 'system-ui', 'sans-serif'],
          },
          animation: {
            'fade-in': 'fadeIn 0.8s ease-out',
            'slide-up': 'slideUp 0.6s ease-out',
            'float': 'float 6s ease-in-out infinite',
          },
          keyframes: {
            fadeIn: {
              '0%': { opacity: '0' },
              '100%': { opacity: '1' },
            },
            slideUp: {
              '0%': { transform: 'translateY(20px)', opacity: '0' },
              '100%': { transform: 'translateY(0)', opacity: '1' },
            },
            float: {
              '0%, 100%': { transform: 'translateY(0px)' },
              '50%': { transform: 'translateY(-20px)' },
            }
          }
        }
      }
    }
  </script>

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
    rel="stylesheet">

  <style>
    body {
      background: linear-gradient(135deg, #0c4a6e 0%, #1e293b 100%);
      min-height: 100vh;
    }

    .glass-effect {
      background: rgba(15, 23, 42, 0.8);
      backdrop-filter: blur(16px);
      border: 1px solid rgba(148, 163, 184, 0.1);
    }

    .gradient-text {
      background: linear-gradient(135deg, #0ea5e9, #06b6d4);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .floating-shapes {
      position: absolute;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: 0;
    }

    .floating-shapes::before,
    .floating-shapes::after {
      content: '';
      position: absolute;
      background: linear-gradient(45deg, rgba(14, 165, 233, 0.1), rgba(6, 182, 212, 0.1));
      border-radius: 50%;
      animation: float 8s ease-in-out infinite;
    }

    .floating-shapes::before {
      width: 300px;
      height: 300px;
      top: 10%;
      right: 10%;
      animation-delay: -2s;
    }

    .floating-shapes::after {
      width: 200px;
      height: 200px;
      bottom: 10%;
      left: 10%;
      animation-delay: -4s;
    }
  </style>
</head>

<body class="bg-gray-950 font-sans antialiased">
  <div class="floating-shapes"></div>

  <main class="min-h-screen flex items-center justify-center px-4 py-8 relative z-10">
    <div class="w-full max-w-md animate-slide-up">
      <!-- Logo and Brand -->
      <div class="text-center mb-8">
        <div
          class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-br from-primary-500 to-primary-600 rounded-2xl mb-4 shadow-2xl">
          <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6">
            </path>
          </svg>
        </div>
        <h1 class="text-3xl font-bold gradient-text mb-2">AtivosPlus</h1>
        <p class="text-gray-400">Gerencie seus investimentos com inteligência</p>
      </div>

      <!-- Login Form -->
      <div class="glass-effect rounded-2xl p-8 shadow-2xl">
        <div class="text-center mb-6">
          <h2 class="text-2xl font-bold text-white mb-2">Bem-vindo de volta</h2>
          <p class="text-gray-400">Entre na sua conta para continuar</p>
        </div>

        <form id="loginForm" class="space-y-6" method="post">
          <div>
            <label for="username" class="block text-sm font-medium text-gray-300 mb-2">
              Usuário
            </label>
            <div class="relative">
              <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none"
                stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <input type="text" name="username" id="username"
                class="w-full pl-10 pr-4 py-3 bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200"
                placeholder="Digite seu usuário" required>
            </div>
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-300 mb-2">
              Senha
            </label>
            <div class="relative">
              <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none"
                stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z">
                </path>
              </svg>
              <input type="password" name="password" id="password"
                class="w-full pl-10 pr-12 py-3 bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all duration-200"
                placeholder="Digite sua senha" required>
              <button type="button" id="togglePassword"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white transition-colors">
                <svg id="eyeIcon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z">
                  </path>
                </svg>
              </button>
            </div>
          </div>

          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <input id="remember" name="remember" type="checkbox"
                class="w-4 h-4 text-primary-600 bg-gray-800 border-gray-600 rounded focus:ring-primary-500 focus:ring-2">
              <label for="remember" class="ml-2 text-sm text-gray-300">
                Lembrar-me
              </label>
            </div>
            <a href="#" class="text-sm text-primary-400 hover:text-primary-300 transition-colors">
              Esqueceu a senha?
            </a>
          </div>

          <button type="submit"
            class="w-full py-3 px-4 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white font-medium rounded-lg transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 focus:ring-offset-gray-900 shadow-lg hover:shadow-xl">
            <span class="flex items-center justify-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1">
                </path>
              </svg>
              Entrar
            </span>
          </button>

          <div class="text-center">
            <p class="text-gray-400 text-sm">
              Não tem uma conta?
              <a href="/Registo" class="text-primary-400 hover:text-primary-300 font-medium transition-colors">
                Criar conta
              </a>
            </p>
          </div>
        </form>
      </div>

      <!-- Features Preview -->
      <div class="mt-8 grid grid-cols-1 sm:grid-cols-3 gap-4 text-center">
        <div class="bg-gray-800/30 backdrop-blur-sm border border-gray-700 rounded-lg p-4">
          <div class="w-8 h-8 bg-green-500/20 rounded-lg flex items-center justify-center mx-auto mb-2">
            <svg class="w-4 h-4 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <p class="text-xs text-gray-400">Seguro</p>
        </div>
        <div class="bg-gray-800/30 backdrop-blur-sm border border-gray-700 rounded-lg p-4">
          <div class="w-8 h-8 bg-blue-500/20 rounded-lg flex items-center justify-center mx-auto mb-2">
            <svg class="w-4 h-4 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6">
              </path>
            </svg>
          </div>
          <p class="text-xs text-gray-400">Análises</p>
        </div>
        <div class="bg-gray-800/30 backdrop-blur-sm border border-gray-700 rounded-lg p-4">
          <div class="w-8 h-8 bg-purple-500/20 rounded-lg flex items-center justify-center mx-auto mb-2">
            <svg class="w-4 h-4 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <p class="text-xs text-gray-400">Tempo Real</p>
        </div>
      </div>
    </div>
  </main>

  <!-- Toast Container -->
  <div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2"></div>

  <script>
    document.getElementById('loginForm').addEventListener('submit', async function (e) {
      e.preventDefault();
      const username = document.getElementById('username').value;
      const password = document.getElementById('password').value;
      const submitButton = document.getElementById('submitButton');

      // Desabilita o botão e mostra indicador de carregamento
      submitButton.disabled = true;
      submitButton.innerHTML = 'A processar...';

      try {
        const resposta = await fetch(`/api/user/logar`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            username: username,
            password: password
          }),
          credentials: 'include'
        });

        console.log(resposta);

        // Restaura o botão
        submitButton.disabled = false;
        submitButton.innerHTML = 'Entrar';

        if (resposta.ok) {
          // Mostra o toast de sucesso
          mostrarToast('success', 'Login realizado com sucesso!');

          // Redireciona após 2 segundos
          setTimeout(() => {
            window.location.href = '/Geral';
          }, 2000);
        } else {
          // Mostra o toast de erro
          mostrarToast('error', 'Erro no login: ' + (resposta.statusText || 'Credenciais inválidas'));
        }
      } catch (err) {
        // Restaura o botão
        submitButton.disabled = false;
        submitButton.innerHTML = 'Entrar';

        // Mostra o toast de erro
        mostrarToast('error', 'Erro ao conectar com o servidor');
        console.error('Erro ao fazer login:', err);
      }
    });

    // Função para mostrar toasts
    function mostrarToast(tipo, mensagem) {
      const toastContainer = document.getElementById('toast-container');
      const toastId = 'toast-' + Date.now();

      const icone = tipo === 'success'
        ? '<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8.5 8.5a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 13.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>'
        : '<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20"><path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z"></path></svg>';

      const corIcone = tipo === 'success'
        ? 'text-green-500 bg-green-100 dark:bg-green-800 dark:text-green-200'
        : 'text-red-500 bg-red-100 dark:bg-red-800 dark:text-red-200';

      const toast = document.createElement('div');
      toast.id = toastId;
      toast.className = 'toast flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow-lg dark:text-gray-400 dark:bg-gray-800';
      toast.setAttribute('role', 'alert');
      toast.innerHTML = `
      <div class="inline-flex items-center justify-center shrink-0 w-8 h-8 ${corIcone} rounded-lg">
        ${icone}
        <span class="sr-only">${tipo === 'success' ? 'Sucesso' : 'Erro'}</span>
      </div>
      <div class="ml-3 text-sm font-normal">${mensagem}</div>
      <button type="button" class="ml-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700" onclick="fecharToast('${toastId}')">
        <span class="sr-only">Fechar</span>
        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
        </svg>
      </button>
    `;

      toastContainer.appendChild(toast);

      // Auto-remover após 5 segundos
      setTimeout(() => {
        fecharToast(toastId);
      }, 5000);
    }

    // Função para fechar toasts
    function fecharToast(toastId) {
      const toast = document.getElementById(toastId);
      if (toast) {
        toast.remove();
      }
    }
  </script>
</body>

















   