@page
@model AtivoPlusFrontend.Pages.Pages_RecuperarPassword
@{
    ViewData["Title"] = "Recuperar Password - AtivosPlus";
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt" class="dark">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#eff6ff',
                            100: '#dbeafe',
                            200: '#bfdbfe',
                            300: '#93c5fd',
                            400: '#60a5fa',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                            800: '#1e40af',
                            900: '#1e3a8a',
                            950: '#172554'
                        }
                    },
                    animation: {
                        'slide-up': 'slideUp 0.8s ease-out',
                        'fade-in': 'fadeIn 1s ease-out',
                        'float': 'float 6s ease-in-out infinite',
                        'float-delayed': 'float 6s ease-in-out infinite 3s'
                    },
                    keyframes: {
                        slideUp: {
                            '0%': { transform: 'translateY(50px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' }
                        },
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' }
                        },
                        float: {
                            '0%, 100%': { transform: 'translateY(0px)' },
                            '50%': { transform: 'translateY(-20px)' }
                        }
                    }
                }
            }
        }
    </script>

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
        rel="stylesheet">

    <style>
        body {
            background: linear-gradient(135deg, #0c4a6e 0%, #1e293b 100%);
            min-height: 100vh;
        }

        .glass-effect {
            background: rgba(15, 23, 42, 0.8);
            backdrop-filter: blur(16px);
            border: 1px solid rgba(148, 163, 184, 0.1);
        }

        .gradient-text {
            background: linear-gradient(135deg, #0ea5e9, #06b6d4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .floating-shapes {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            pointer-events: none;
        }

        .floating-shapes::before,
        .floating-shapes::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(6, 182, 212, 0.1));
            animation: float 6s ease-in-out infinite;
        }

        .floating-shapes::before {
            width: 300px;
            height: 300px;
            top: 20%;
            left: 10%;
            animation-delay: -2s;
        }

        .floating-shapes::after {
            width: 200px;
            height: 200px;
            bottom: 20%;
            right: 10%;
            animation-delay: -4s;
        }
    </style>
</head>

<body class="bg-gray-950 font-sans antialiased">
    <div class="floating-shapes"></div>

    <main class="min-h-screen flex items-center justify-center px-4 py-8 relative z-10">
        <div class="w-full max-w-md animate-slide-up">
            <!-- Logo and Header -->
            <div class="text-center mb-8 animate-fade-in">
                <div class="inline-block p-4 bg-primary-600/20 rounded-2xl mb-4">
                    <svg class="w-12 h-12 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z">
                        </path>
                    </svg>
                </div>
                <h1 class="text-3xl font-bold gradient-text mb-2">Recuperar Password</h1>
                <p class="text-gray-400">Introduza a sua nova password e o código de verificação</p>
            </div>

            <!-- Recovery Form -->
            <div class="glass-effect rounded-2xl p-8 shadow-2xl">
                <form id="recuperarPasswordForm" class="space-y-6">
                    <!-- New Password Field -->
                    <div class="space-y-2">
                        <label for="novaPassword" class="block text-sm font-medium text-gray-300">
                            Nova Password
                        </label>
                        <div class="relative">
                            <input type="password" id="novaPassword" name="novaPassword" required
                                class="w-full px-4 py-3.5 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/25 transition-all duration-200"
                                placeholder="Introduza a nova password">
                            <button type="button" onclick="togglePasswordVisibility('novaPassword')"
                                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-300 transition-colors">
                                <svg id="novaPassword-eye" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z">
                                    </path>
                                </svg>
                            </button>
                        </div>
                    </div>

                    <!-- Confirm Password Field -->
                    <div class="space-y-2">
                        <label for="confirmarPassword" class="block text-sm font-medium text-gray-300">
                            Confirmar Password
                        </label>
                        <div class="relative">
                            <input type="password" id="confirmarPassword" name="confirmarPassword" required
                                class="w-full px-4 py-3.5 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/25 transition-all duration-200"
                                placeholder="Confirme a nova password">
                            <button type="button" onclick="togglePasswordVisibility('confirmarPassword')"
                                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-300 transition-colors">
                                <svg id="confirmarPassword-eye" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z">
                                    </path>
                                </svg>
                            </button>
                        </div>
                    </div>

                    <!-- Verification Code Field -->
                    <div class="space-y-2">
                        <label for="codigoVerificacao" class="block text-sm font-medium text-gray-300">
                            Código de Verificação
                        </label>
                        <input type="text" id="codigoVerificacao" name="codigoVerificacao" required
                            pattern="[0-9]{6}" maxlength="6" minlength="6"
                            class="w-full px-4 py-3.5 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/25 transition-all duration-200 text-center text-lg tracking-widest"
                            placeholder="000000">
                        <p class="text-xs text-gray-500 mt-1">Introduza o código de 6 dígitos (100000-999999)</p>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit"
                        class="w-full bg-gradient-to-r from-primary-600 to-blue-600 hover:from-primary-700 hover:to-blue-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1">
                        <span class="flex items-center justify-center gap-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z">
                                </path>
                            </svg>
                            Mudar Pass
                        </span>
                    </button>

                    <!-- Back to Login Link -->
                    <div class="text-center pt-4 border-t border-gray-800">
                        <a href="/" class="text-primary-400 hover:text-primary-300 text-sm font-medium transition-colors">
                            ← Voltar ao Login
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </main>

    <!-- Toast Container -->
    <div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2"></div>

    <script>
        // Toggle password visibility
        function togglePasswordVisibility(fieldId) {
            const field = document.getElementById(fieldId);
            const eye = document.getElementById(fieldId + '-eye');
            
            if (field.type === 'password') {
                field.type = 'text';
                eye.innerHTML = `
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L12 12m6.12-6.12L21 3m-6.12 6.12a3 3 0 00-4.243 4.243m4.243-4.243L12 9.88"></path>
                `;
            } else {
                field.type = 'password';
                eye.innerHTML = `
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                `;
            }
        }

        // Format verification code input
        document.getElementById('codigoVerificacao').addEventListener('input', function(e) {
            // Only allow numbers
            e.target.value = e.target.value.replace(/[^0-9]/g, '');
        });

        // Form submission handler
        document.getElementById('recuperarPasswordForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const novaPassword = document.getElementById('novaPassword').value;
            const confirmarPassword = document.getElementById('confirmarPassword').value;
            const codigoVerificacao = document.getElementById('codigoVerificacao').value;
            
            // Validate passwords match
            if (novaPassword !== confirmarPassword) {
                showToast('As passwords não coincidem!', 'error');
                return;
            }
            
            // Validate password length
            if (novaPassword.length < 6) {
                showToast('A password deve ter pelo menos 6 caracteres!', 'error');
                return;
            }
            
            // Validate verification code
            if (codigoVerificacao.length !== 6) {
                showToast('O código de verificação deve ter 6 dígitos!', 'error');
                return;
            }
            
            const codigo = parseInt(codigoVerificacao);
            if (codigo < 100000 || codigo > 999999) {
                showToast('Código de verificação inválido! Deve estar entre 100000 e 999999.', 'error');
                return;
            }
            
            // Print values (temporary functionality)
            console.log('Nova Password:', novaPassword);
            console.log('Código de Verificação:', codigoVerificacao);
            
            showToast('Password alterada com sucesso!', 'success');
            
            // TODO: Here you would normally send the data to the server
            // For now, just redirect to login after a delay
            setTimeout(() => {
                window.location.href = '/';
            }, 2000);
        });

        // Toast notification function
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            const toastId = 'toast-' + Date.now();
            toast.id = toastId;
            
            const bgColor = type === 'success' ? 'bg-green-600' : 
                           type === 'error' ? 'bg-red-600' : 
                           type === 'warning' ? 'bg-yellow-600' : 'bg-blue-600';
            
            const icon = type === 'success' ? '✓' : 
                        type === 'error' ? '✕' : 
                        type === 'warning' ? '⚠' : 'ℹ';
            
            toast.className = `${bgColor} text-white px-6 py-4 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full opacity-0 flex items-center gap-3 min-w-80`;
            toast.innerHTML = `
                <span class="text-lg font-bold">${icon}</span>
                <span class="flex-1">${message}</span>
                <button onclick="fecharToast('${toastId}')" class="text-white/80 hover:text-white ml-2">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            `;
            
            document.getElementById('toast-container').appendChild(toast);
            
            // Animate in
            setTimeout(() => {
                toast.classList.remove('translate-x-full', 'opacity-0');
            }, 100);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                fecharToast(toastId);
            }, 5000);
        }

        // Close toast function
        function fecharToast(toastId) {
            const toast = document.getElementById(toastId);
            if (toast) {
                toast.classList.add('translate-x-full', 'opacity-0');
                setTimeout(() => {
                    toast.remove();
                }, 300);
            }
        }
    </script>
</body>

</html>
