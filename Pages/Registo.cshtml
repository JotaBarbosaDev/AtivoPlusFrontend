@page
@model AtivoPlusFrontend.Pages.Pages_Registo
@{
  ViewData["Title"] = "Registo";
  Layout = null;
}
<!DOCTYPE html>
<html lang="pt">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Registo | AtivoPlus</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#eff6ff',
              100: '#dbeafe',
              200: '#bfdbfe',
              300: '#93c5fd',
              400: '#60a5fa',
              500: '#3b82f6',
              600: '#2563eb',
              700: '#1d4ed8',
              800: '#1e40af',
              900: '#1e3a8a',
              950: '#172554'
            }
          },
          animation: {
            'float': 'float 6s ease-in-out infinite',
            'float-delayed': 'float 6s ease-in-out infinite 2s',
            'fade-in': 'fadeIn 0.6s ease-out',
            'slide-up': 'slideUp 0.4s ease-out'
          },
          keyframes: {
            float: {
              '0%, 100%': { transform: 'translateY(0px)' },
              '50%': { transform: 'translateY(-20px)' }
            },
            fadeIn: {
              '0%': { opacity: '0', transform: 'translateY(10px)' },
              '100%': { opacity: '1', transform: 'translateY(0)' }
            },
            slideUp: {
              '0%': { opacity: '0', transform: 'translateY(100px)' },
              '100%': { opacity: '1', transform: 'translateY(0)' }
            }
          }
        }
      }
    }
  </script>
</head>

<body class="dark bg-gray-950 min-h-screen">
  <!-- Animated Background -->
  <div class="fixed inset-0 overflow-hidden pointer-events-none">
    <div class="absolute inset-0 bg-gradient-to-br from-primary-950 via-gray-950 to-blue-950"></div>

    <!-- Floating Shapes -->
    <div class="absolute top-20 left-20 w-32 h-32 bg-primary-500/10 rounded-full blur-xl animate-float"></div>
    <div class="absolute top-40 right-32 w-48 h-48 bg-blue-500/10 rounded-full blur-xl animate-float-delayed"></div>
    <div class="absolute bottom-32 left-1/3 w-40 h-40 bg-primary-400/10 rounded-full blur-xl animate-float"></div>
    <div class="absolute bottom-20 right-20 w-24 h-24 bg-blue-400/10 rounded-full blur-xl animate-float-delayed"></div>
  </div>

  <main class="relative min-h-screen flex items-center justify-center px-4 py-8">
    <div class="w-full max-w-2xl">
      <!-- Logo and Branding -->
      <div class="text-center mb-8 animate-fade-in">
        <div
          class="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-primary-600 to-blue-600 rounded-2xl mb-4 shadow-lg">
          <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5" />
          </svg>
        </div>
        <h1 class="text-3xl font-bold bg-gradient-to-r from-primary-400 to-blue-400 bg-clip-text text-transparent mb-2">
          AtivoPlus
        </h1>
        <p class="text-gray-400">Cria a tua conta e começa a investir</p>
      </div>

      <!-- Registration Form -->
      <div class="bg-gray-900/50 backdrop-blur-xl border border-gray-800 rounded-2xl p-8 shadow-2xl animate-slide-up">
        <h2 class="text-2xl font-bold text-white mb-6 text-center">
          Criar Nova Conta
        </h2>
        <form id="registoForm" class="space-y-6">
          <!-- Username -->
          <div class="space-y-2">
            <label for="username" class="block text-sm font-medium text-gray-300">
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                Username
              </div>
            </label>
            <input type="text" name="username" id="username" placeholder="O teu nome de utilizador"
              class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
              required>
          </div>

          <!-- Passwords Row -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="space-y-2">
              <label for="password" class="block text-sm font-medium text-gray-300">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                  </svg>
                  Password
                </div>
              </label>
              <input type="password" name="password" id="password" placeholder="••••••••"
                class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                required>
            </div>

            <div class="space-y-2">
              <label for="passwordConfirm" class="block text-sm font-medium text-gray-300">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Confirmar Password
                </div>
              </label>
              <input type="password" name="passwordConfirm" id="passwordConfirm" placeholder="••••••••"
                class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                required>
            </div>
          </div>

          <!-- Email -->
          <div class="space-y-2">
            <label for="email" class="block text-sm font-medium text-gray-300">
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                Email
              </div>
            </label>
            <input type="email" name="email" id="email" placeholder="nome@email.com"
              class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
              required>
          </div>

          <!-- Contact Info Row -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="space-y-2">
              <label for="telefone" class="block text-sm font-medium text-gray-300">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                  Telefone
                </div>
              </label>
              <input type="text" name="telefone" id="telefone" placeholder="912345678"
                class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                required>
            </div>

            <div class="space-y-2">
              <label for="nif" class="block text-sm font-medium text-gray-300">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  NIF
                </div>
              </label>
              <input type="text" name="nif" id="nif" placeholder="123456789"
                class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                required>
            </div>
          </div>

          <!-- Address -->
          <div class="space-y-4">
            <h3 class="text-lg font-medium text-gray-300 border-b border-gray-700 pb-2">Morada</h3>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <label for="rua" class="block text-sm font-medium text-gray-300">Rua</label>
                <input type="text" name="rua" id="rua" placeholder="Nome da rua"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                  required>
              </div>

              <div class="space-y-2">
                <label for="numeroPorta" class="block text-sm font-medium text-gray-300">Nº Porta</label>
                <input type="text" name="numeroPorta" id="numeroPorta" placeholder="123"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                  required>
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="space-y-2">
                <label for="piso" class="block text-sm font-medium text-gray-300">Piso</label>
                <input type="text" name="piso" id="piso" placeholder="1º (opcional)"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200">
              </div>

              <div class="space-y-2">
                <label for="localidade" class="block text-sm font-medium text-gray-300">Localidade</label>
                <input type="text" name="localidade" id="localidade" placeholder="Vila/Cidade"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                  required>
              </div>

              <div class="space-y-2">
                <label for="codPostal" class="block text-sm font-medium text-gray-300">Cód. Postal</label>
                <input type="text" name="codPostal" id="codPostal" placeholder="1234-567"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                  required>
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <label for="concelho" class="block text-sm font-medium text-gray-300">Concelho</label>
                <input type="text" name="concelho" id="concelho" placeholder="Nome do concelho"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                  required>
              </div>

              <div class="space-y-2">
                <label for="distrito" class="block text-sm font-medium text-gray-300">Distrito</label>
                <input type="text" name="distrito" id="distrito" placeholder="Nome do distrito"
                  class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
                  required>
              </div>
            </div>
          </div>

          <!-- IBAN -->
          <div class="space-y-2">
            <label for="iban" class="block text-sm font-medium text-gray-300">
              <div class="flex items-center gap-2">
                <svg class="w-4 h-4 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                </svg>
                IBAN
              </div>
            </label>
            <input type="text" name="iban" id="iban" placeholder="PT50..."
              class="w-full px-4 py-3 bg-gray-800/50 border border-gray-700 rounded-xl text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 transition-all duration-200"
              required>
          </div>

          <!-- Submit Button -->
          <button type="submit"
            class="w-full py-4 bg-gradient-to-r from-primary-600 to-blue-600 text-white font-semibold rounded-xl hover:from-primary-700 hover:to-blue-700 focus:ring-4 focus:ring-primary-500/25 transition-all duration-200 transform hover:scale-105 active:scale-95">
            <div class="flex items-center justify-center gap-2">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
              </svg>
              Criar Conta
            </div>
          </button>

          <!-- Login Link -->
          <div class="text-center pt-4">
            <p class="text-gray-400">
              Já tens conta?
              <a href="/Index"
                class="text-primary-400 hover:text-primary-300 font-medium transition-colors duration-200">
                Iniciar Sessão
              </a>
            </p>
          </div>
        </form>
      </div>
    </div>

    <!-- Toast Notifications -->
    <div id="toast-container" class="fixed bottom-4 right-4 z-50 space-y-2"></div>
  </main>

  <script>
    function showToast(message, type = "info") {
      const toast = document.createElement("div");

      let iconSVG, bgClass, borderClass;
      switch (type) {
        case "success":
          bgClass = "bg-green-500/10 border-green-500/20";
          borderClass = "border-green-500/30";
          iconSVG = `<svg class="w-5 h-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414L8.414 15l-4.121-4.121a1 1 0 111.414-1.414L8.414 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
          </svg>`;
          break;
        case "error":
          bgClass = "bg-red-500/10 border-red-500/20";
          borderClass = "border-red-500/30";
          iconSVG = `<svg class="w-5 h-5 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>`;
          break;
        case "warning":
          bgClass = "bg-yellow-500/10 border-yellow-500/20";
          borderClass = "border-yellow-500/30";
          iconSVG = `<svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M8.257 3.099c.366-.446.998-.446 1.364 0l7.071 8.625c.329.401.05.986-.437.986H1.303c-.487 0-.766-.585-.437-.986l7.071-8.625zM11 14a1 1 0 10-2 0 1 1 0 002 0zm-.25-3.25a.75.75 0 01-1.5 0v-3a.75.75 0 011.5 0v3z" clip-rule="evenodd"/>
          </svg>`;
          break;
        default:
          bgClass = "bg-primary-500/10 border-primary-500/20";
          borderClass = "border-primary-500/30";
          iconSVG = `<svg class="w-5 h-5 text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>`;
      }

      toast.className = `flex items-center p-4 space-x-3 ${bgClass} ${borderClass} border backdrop-blur-xl rounded-xl shadow-lg text-white animate-slide-up`;
      toast.innerHTML = `
        ${iconSVG}
        <div class="text-sm font-medium">${message}</div>
      `;

      const container = document.getElementById("toast-container");
      container.appendChild(toast);

      setTimeout(() => {
        toast.classList.add("opacity-0", "transition-opacity", "duration-300");
        setTimeout(() => toast.remove(), 300);
      }, 3000);
    }

    // Password validation
    function validatePasswords() {
      const password = document.getElementById('password').value;
      const confirmPassword = document.getElementById('passwordConfirm').value;

      if (password !== confirmPassword) {
        showToast('As passwords não coincidem', 'error');
        return false;
      }

      if (password.length < 6) {
        showToast('A password deve ter pelo menos 6 caracteres', 'error');
        return false;
      }

      return true;
    }

    document.getElementById('registoForm').addEventListener('submit', async function (e) {
      e.preventDefault();

      if (!validatePasswords()) {
        return;
      }

      const data = {
        userInfoRequest: {
          id: -1,
          nome: document.getElementById('username').value,
          email: document.getElementById('email').value,
          telefone: document.getElementById('telefone').value,
          morada_id: 0,
          nif: document.getElementById('nif').value,
          dateTime: new Date().toISOString(),
          iban: document.getElementById('iban').value
        },
        moradaRequest: {
          rua: document.getElementById('rua').value,
          piso: document.getElementById('piso').value || "",
          numeroPorta: document.getElementById('numeroPorta').value,
          concelho: document.getElementById('concelho').value,
          distrito: document.getElementById('distrito').value,
          localidade: document.getElementById('localidade').value,
          codPostal: document.getElementById('codPostal').value
        }
      };

      const user = {
        username: document.getElementById('username').value,
        password: document.getElementById('password').value,
      };

      try {
        showToast('A criar conta...', 'info');

        const response = await fetch('/api/user/adicionar', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(user)
        });

        if (response.ok) {
          //logar o utilizador com as mesmas credenciais
          const loginResponse = await fetch('/api/user/logar', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(user)
          });
          if (!loginResponse.ok) {
            showToast('Erro ao iniciar sessão após criação de conta.', 'error');
            return;
          }
          try {
            const response2 = await fetch('/api/userinfo/setInfo', {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(data)
            });

            if (response2.ok) {
              showToast('Conta criada com sucesso!', 'success');
              setTimeout(() => window.location.href = '/Index', 1500);
            } else {
              showToast('Erro ao guardar informações do utilizador.', 'error');
            }
          } catch (error) {
            showToast('Erro na ligação à API.', 'error');
            console.error(error);
          }
        } else {
          showToast('Erro ao criar utilizador.', 'error');
        }
      } catch (error) {
        showToast('Erro na ligação à API.', 'error');
        console.error(error);
      }
    });
  </script>

</body>

</html> 
 
 
 
 
 
  
 
 
  
   
 
   
 ); 
  
  