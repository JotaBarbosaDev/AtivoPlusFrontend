@page
@model AtivoPlusFrontend.Pages.Pages_Carteira
@{
    ViewData["Title"] = "Carteira";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="pt-pt">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página Complexa com Animações</title>
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
</head>
<body>

    <main class=" h-auto pt-20 grid lg:grid-cols-2 md:grid-cols-1 sm:gap-8 gap-8 md:gap-4 lg:gap-4 justify-center">
        
       <div id="carteirasContainer" class="contents"></div>

    </main>

    <script>
    document.addEventListener('DOMContentLoaded', async () => {
        const container = document.getElementById('carteirasContainer');

        try {
            const response = await fetch("https://es.marquesserver.freeddns.org:10513/api/carteira/ver?userIdFromCarteira=-1", {
                credentials: 'include' // importante para enviar o cookie de autenticação
            });

            const data = await response.json();

            if (!Array.isArray(data)) throw new Error("Resposta inesperada da API.");

            data.forEach(carteira => {
                const nome = carteira.nome ?? "-";
                const tipo = carteira.tipo ?? "-";
                const percentual = carteira.percentual ?? "-";
                const valor = carteira.valor ?? "-";

                const corValor = valor.startsWith('+') ? 'text-green-700 dark:text-green-400' :
                                 valor.startsWith('-') ? 'text-red-700 dark:text-red-400' : 'text-gray-500';

                const svgUp = `
                    <svg class="w-6 h-6 text-gray-800 dark:text-white group-hover:animate-bounce" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m16 17-4-4-4 4m8-6-4-4-4 4"/>
                    </svg>`;
                const svgDown = `
                    <svg class="w-6 h-6 text-gray-800 dark:text-white group-hover:animate-bounce" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m8 7 4 4 4-4m-8 6 4 4 4-4"/>
                    </svg>`;

                const card = `
                <a href="#" class="group flex flex-col items-center bg-white border border-gray-200 rounded-lg shadow-sm md:flex-row md:max-w-xl hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                    <img class="img w-full rounded-t-lg h-96 ml-4 md:h-auto md:w-48 md:rounded-none md:rounded-s-lg" src="https://www.tracado.pt/img/upload/moradia_ld1/gallery/vcr08---vista-piscina.jpg" alt="">
                    <div class="flex flex-col justify-between p-4 leading-normal">
                        <div class="flex">
                            <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">${nome}</h5>
                            <span class="bg-gray-100 text-gray-800 text-xs font-medium me-2 px-1 py-1 rounded-md dark:bg-gray-700 dark:text-gray-400 border border-gray-500 h-6 ml-4 align-center">${tipo}</span>
                        </div>
                        <div class="flex items-center">
                            ${valor.startsWith('+') ? svgUp : svgDown}
                            <span class="text-gray-700 dark:text-gray-400 flex">${percentual}
                                <p class="${corValor} ml-4 text-medium group-hover:animate-pulse group-hover:font-semibold">${valor}</p>
                            </span>
                        </div>
                        <p class="mb-3 mt-3 font-normal text-gray-700 dark:text-gray-400">Movimentações recentes impactaram o desempenho da carteira.</p>
                    </div>
                </a>
                `;

                container.insertAdjacentHTML('beforeend', card);
            });
        } catch (error) {
            container.innerHTML = `<p class="text-red-500 text-center w-full">Erro ao carregar carteiras: ${error.message}</p>`;
        }
    });
</script>


</body>
</html>
