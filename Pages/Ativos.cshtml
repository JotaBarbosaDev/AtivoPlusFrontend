@page
@model IndexModel
@{
    ViewData["Title"] = "Ativos";
    Layout = "_Layout";

    // Defini√ß√£o da lista de ativos com Quantidade como double
    var ativos = new[] {
        new { Nome = "Casa em Lisboa", Icon = "üè†", Carteira = "Carteira Alpha", Tipo = "Residencial", Quantidade = 1.0, TaxaJuro = "3.5%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨350,000", Lucro = "‚Ç¨-28.550" },
        new { Nome = "Fundo Imobili√°rio KNRI11", Icon = "üè¶", Carteira = "Carteira Alpha", Tipo = "Fundo Imobili√°rio", Quantidade = 150.0, TaxaJuro = "2.8%", TipoTaxa = "Vari√°vel", PrecoCompra = "‚Ç¨115.30", Lucro = "‚Ç¨3.200" },
        new { Nome = "A√ß√£o PETR4", Icon = "üìà", Carteira = "Carteira Alpha", Tipo = "A√ß√£o", Quantidade = 500.0, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨32.45", Lucro = "‚Ç¨2.000" },
        new { Nome = "Criptomoeda BTC", Icon = "ü™ô", Carteira = "Carteira Beta", Tipo = "Criptomoeda", Quantidade = 0.5, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨150,000", Lucro = "‚Ç¨20,000" },
        new { Nome = "Casa em Porto", Icon = "üè†", Carteira = "Carteira Alpha", Tipo = "Residencial", Quantidade = 1.0, TaxaJuro = "3.8%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨280,000", Lucro = "‚Ç¨18,000" },
        new { Nome = "Apartamento no Algarve", Icon = "üè¢", Carteira = "Carteira Alpha", Tipo = "Residencial", Quantidade = 1.0, TaxaJuro = "4.0%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨220,000", Lucro = "‚Ç¨12,000" },
        new { Nome = "A√ß√£o ITUB4", Icon = "üìà", Carteira = "Carteira Beta", Tipo = "A√ß√£o", Quantidade = 1000.0, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨4.50", Lucro = "‚Ç¨500" },
        new { Nome = "Fundo Multimercado XPML11", Icon = "üíº", Carteira = "Carteira Alpha", Tipo = "Fundo", Quantidade = 200.0, TaxaJuro = "3.2%", TipoTaxa = "Vari√°vel", PrecoCompra = "‚Ç¨85.00", Lucro = "‚Ç¨1,200" },
        new { Nome = "Criptomoeda ETH", Icon = "ü™ô", Carteira = "Carteira Alpha", Tipo = "Criptomoeda", Quantidade = 10.0, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨2,500", Lucro = "‚Ç¨5,000" },
        new { Nome = "CDB Banco do Brasil", Icon = "üíµ", Carteira = "Carteira Eta", Tipo = "Renda Fixa", Quantidade = 5.0, TaxaJuro = "6.5%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨1,000", Lucro = "‚Ç¨150" },
        new { Nome = "Casa em Lisboa", Icon = "üè†", Carteira = "Carteira Alpha", Tipo = "Residencial", Quantidade = 1.0, TaxaJuro = "3.5%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨350,000", Lucro = "‚Ç¨25,000" },
        new { Nome = "Fundo Imobili√°rio KNRI11", Icon = "üè¶", Carteira = "Carteira Alpha", Tipo = "Fundo Imobili√°rio", Quantidade = 150.0, TaxaJuro = "2.8%", TipoTaxa = "Vari√°vel", PrecoCompra = "‚Ç¨115.30", Lucro = "‚Ç¨3,200" },
        new { Nome = "A√ß√£o PETR4", Icon = "üìà", Carteira = "Carteira Alpha", Tipo = "A√ß√£o", Quantidade = 500.0, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨32.45", Lucro = "‚Ç¨2,000" },
        new { Nome = "Criptomoeda BTC", Icon = "ü™ô", Carteira = "Carteira Beta", Tipo = "Criptomoeda", Quantidade = 0.5, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨150,000", Lucro = "‚Ç¨20,000" },
        new { Nome = "Casa em Porto", Icon = "üè†", Carteira = "Carteira Alpha", Tipo = "Residencial", Quantidade = 1.0, TaxaJuro = "3.8%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨280,000", Lucro = "‚Ç¨18,000" },
        new { Nome = "Apartamento no Algarve", Icon = "üè¢", Carteira = "Carteira Alpha", Tipo = "Residencial", Quantidade = 1.0, TaxaJuro = "4.0%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨220,000", Lucro = "‚Ç¨12,000" },
        new { Nome = "A√ß√£o ITUB4", Icon = "üìà", Carteira = "Carteira Beta", Tipo = "A√ß√£o", Quantidade = 1000.0, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨4.50", Lucro = "‚Ç¨500" },
        new { Nome = "Fundo Multimercado XPML11", Icon = "üíº", Carteira = "Carteira Alpha", Tipo = "Fundo", Quantidade = 200.0, TaxaJuro = "3.2%", TipoTaxa = "Vari√°vel", PrecoCompra = "‚Ç¨85.00", Lucro = "‚Ç¨1,200" },
        new { Nome = "Criptomoeda ETH", Icon = "ü™ô", Carteira = "Carteira Alpha", Tipo = "Criptomoeda", Quantidade = 10.0, TaxaJuro = "N/A", TipoTaxa = "N/A", PrecoCompra = "‚Ç¨2,500", Lucro = "‚Ç¨5,000" },
        new { Nome = "CDB Banco do Brasil", Icon = "üíµ", Carteira = "Carteira Eta", Tipo = "Renda Fixa", Quantidade = 5.0, TaxaJuro = "6.5%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨1,000", Lucro = "‚Ç¨150" },
        new { Nome = "CDB Banco do Brasil", Icon = "üíµ", Carteira = "Carteira Eta", Tipo = "Renda Fixa", Quantidade = 5.0, TaxaJuro = "6.5%", TipoTaxa = "Fixa", PrecoCompra = "‚Ç¨1,000", Lucro = "‚Ç¨150" }
    };

    // Definir mapeamento de √≠cones para tipo de ativo
    var tipoIcons = new Dictionary<string, string> 
    {
        { "Residencial", "bg-orange-50 text-orange-700" },
        { "Fundo Imobili√°rio", "bg-indigo-50 text-indigo-700" },
        { "Fundo", "bg-indigo-50 text-indigo-700" },
        { "A√ß√£o", "bg-green-50 text-green-700" },
        { "Criptomoeda", "bg-yellow-50 text-yellow-700" },
        { "Renda Fixa", "bg-blue-50 text-blue-700" }
    };
    
    // Calcular estat√≠sticas para o resumo
    var totalAtivos = ativos.Length;
    var tiposUnicos = ativos.Select(a => a.Tipo).Distinct().Count();
    var carteirasUnicas = ativos.Select(a => a.Carteira).Distinct().Count();
    
    // Calcular saldo total (removendo o s√≠mbolo de moeda e convertendo para decimal)
    decimal saldoTotal = 0;
    foreach (var ativo in ativos)
    {
        string valorStr = ativo.PrecoCompra.Replace("‚Ç¨", "").Replace(",", "");
        if (decimal.TryParse(valorStr, out decimal valor))
        {
            saldoTotal += valor * (decimal)ativo.Quantidade;
        }
    }
    
    // Calcular lucro total
    decimal lucroTotal = 0;
    foreach (var ativo in ativos)
    {
        string lucroStr = ativo.Lucro.Replace("‚Ç¨", "").Replace(",", "");
        if (decimal.TryParse(lucroStr, out decimal lucro))
        {
            lucroTotal += lucro;
        }
    }
    
    // Formata√ß√£o dos valores para exibi√ß√£o
    string saldoFormatado = string.Format("‚Ç¨{0:#,0.00}", saldoTotal);
    string lucroFormatado = string.Format("‚Ç¨{0:#,0.00}", lucroTotal);
}

<div class="px-6 py-8 space-y-8 animate-fade-in">
    <!-- Header -->
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
        <div>
            <h1 class="text-3xl font-bold text-white">Meus Ativos</h1>
            <p class="text-gray-400 mt-1">Gerencie e acompanhe todos os seus investimentos</p>
        </div>
        
        <div class="flex items-center space-x-3">
            <button onclick="exportarPDF()" class="inline-flex items-center px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white font-medium rounded-lg transition-colors">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Exportar PDF
            </button>
            <button onclick="abrirModalNovoAtivo()" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white font-medium rounded-xl transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Novo Ativo
            </button>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- Total Assets -->
        <div class="bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6 card-hover">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm font-medium">Total de Ativos</p>
                    <p class="text-2xl font-bold text-white mt-1">@totalAtivos</p>
                    <div class="flex items-center mt-2">
                        <span class="text-gray-300 text-sm">@tiposUnicos tipos diferentes</span>
                    </div>
                </div>
                <div class="w-12 h-12 bg-gradient-to-br from-blue-500/20 to-blue-600/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                    </svg>
                </div>
            </div>
        </div>

        <!-- Total Value -->
        <div class="bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6 card-hover">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm font-medium">Valor Total Investido</p>
                    <p class="text-2xl font-bold text-white mt-1">@saldoFormatado</p>
                    <div class="flex items-center mt-2">
                        <span class="text-gray-300 text-sm">Em @carteirasUnicas carteiras</span>
                    </div>
                </div>
                <div class="w-12 h-12 bg-gradient-to-br from-green-500/20 to-green-600/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                    </svg>
                </div>
            </div>
        </div>

        <!-- Total Profit -->
        <div class="bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6 card-hover">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm font-medium">Lucro/Preju√≠zo Total</p>
                    <p class="text-2xl font-bold @(lucroTotal >= 0 ? "text-green-400" : "text-red-400") mt-1">@lucroFormatado</p>
                    <div class="flex items-center mt-2">
                        @if (lucroTotal >= 0)
                        {
                            <svg class="w-4 h-4 text-green-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
                            </svg>
                            <span class="text-green-400 text-sm">Lucro</span>
                        }
                        else
                        {
                            <svg class="w-4 h-4 text-red-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
                            </svg>
                            <span class="text-red-400 text-sm">Preju√≠zo</span>
                        }
                    </div>
                </div>
                <div class="w-12 h-12 bg-gradient-to-br from-@(lucroTotal >= 0 ? "green" : "red")-500/20 to-@(lucroTotal >= 0 ? "green" : "red")-600/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-@(lucroTotal >= 0 ? "green" : "red")-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                    </svg>
                </div>
            </div>
        </div>

        <!-- Asset Distribution -->
        <div class="bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6 card-hover">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm font-medium">Distribui√ß√£o</p>
                    <p class="text-2xl font-bold text-white mt-1">@tiposUnicos</p>
                    <div class="flex items-center mt-2">
                        <span class="text-gray-300 text-sm">Tipos de ativo</span>
                    </div>
                </div>
                <div class="w-12 h-12 bg-gradient-to-br from-purple-500/20 to-purple-600/20 rounded-lg flex items-center justify-center">
                    <svg class="w-6 h-6 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z"></path>
                    </svg>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0 bg-gray-900/30 backdrop-blur-sm border border-gray-800 rounded-xl p-6">
        <div class="flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
            <!-- Search -->
            <div class="relative">
                <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
                <input type="text" id="searchInput" placeholder="Buscar ativos..." 
                       class="pl-10 pr-4 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent w-64 transition-colors">
            </div>

            <!-- Type Filter -->
            <select id="tipoFilter" class="px-4 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors">
                <option value="">Todos os tipos</option>
                <option value="Residencial">üè† Residencial</option>
                <option value="Fundo Imobili√°rio">üè¶ Fundo Imobili√°rio</option>
                <option value="A√ß√£o">üìà A√ß√µes</option>
                <option value="Criptomoeda">ü™ô Criptomoedas</option>
                <option value="Renda Fixa">üíµ Renda Fixa</option>
                <option value="Fundo">üíº Fundos</option>
            </select>

            <!-- Portfolio Filter -->
            <select id="carteiraFilter" class="px-4 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-colors">
                <option value="">Todas as carteiras</option>
                @foreach (var carteira in ativos.Select(a => a.Carteira).Distinct())
                {
                    <option value="@carteira">@carteira</option>
                }
            </select>
        </div>

        <!-- View Options -->
        <div class="flex items-center space-x-2">
            <button id="viewGrid" class="p-2 bg-primary-600 text-white rounded-lg transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
                </svg>
            </button>
            <button id="viewTable" class="p-2 bg-gray-700 hover:bg-gray-600 text-gray-300 rounded-lg transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0V8a2 2 0 012-2h8a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"></path>
                </svg>
            </button>
        </div>
    </div>

    <!-- Assets Grid View -->
    <div id="assetsGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        @foreach (var ativo in ativos)
        {
            var lucroValor = decimal.Parse(ativo.Lucro.Replace("‚Ç¨", "").Replace(",", ""));
            var lucroPositivo = lucroValor >= 0;
            
            <div class="asset-card bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl p-6 card-hover cursor-pointer" 
                 data-nome="@ativo.Nome" 
                 data-tipo="@ativo.Tipo" 
                 data-carteira="@ativo.Carteira"
                 onclick="abrirDetalhesAtivo('@ativo.Nome', '@ativo.Tipo', '@ativo.Carteira', '@ativo.Quantidade', '@ativo.PrecoCompra', '@ativo.Lucro', '@ativo.TaxaJuro', '@ativo.TipoTaxa')">
                
                <!-- Asset Header -->
                <div class="flex items-start justify-between mb-4">
                    <div class="flex items-center space-x-3">
                        <div class="w-12 h-12 bg-gradient-to-br from-gray-700 to-gray-800 rounded-lg flex items-center justify-center text-xl">
                            @ativo.Icon
                        </div>
                        <div>
                            <h3 class="font-semibold text-white text-lg truncate">@ativo.Nome</h3>
                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-@(ativo.Tipo == "Residencial" ? "orange" : ativo.Tipo == "A√ß√£o" ? "green" : ativo.Tipo == "Criptomoeda" ? "yellow" : ativo.Tipo == "Fundo Imobili√°rio" || ativo.Tipo == "Fundo" ? "indigo" : "blue")-500/20 text-@(ativo.Tipo == "Residencial" ? "orange" : ativo.Tipo == "A√ß√£o" ? "green" : ativo.Tipo == "Criptomoeda" ? "yellow" : ativo.Tipo == "Fundo Imobili√°rio" || ativo.Tipo == "Fundo" ? "indigo" : "blue")-300">
                                @ativo.Tipo
                            </span>
                        </div>
                    </div>
                    <button class="text-gray-400 hover:text-white transition-colors" onclick="event.stopPropagation(); abrirMenuAcoes('@ativo.Nome')">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                        </svg>
                    </button>
                </div>

                <!-- Asset Details -->
                <div class="space-y-3">
                    <div class="flex justify-between items-center">
                        <span class="text-gray-400 text-sm">Carteira</span>
                        <span class="text-gray-300 text-sm font-medium">@ativo.Carteira</span>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <span class="text-gray-400 text-sm">Quantidade</span>
                        <span class="text-gray-300 text-sm font-medium">@ativo.Quantidade.ToString("N2")</span>
                    </div>
                    
                    <div class="flex justify-between items-center">
                        <span class="text-gray-400 text-sm">Pre√ßo de Compra</span>
                        <span class="text-gray-300 text-sm font-medium">@ativo.PrecoCompra</span>
                    </div>
                    
                    @if (ativo.TaxaJuro != "N/A")
                    {
                        <div class="flex justify-between items-center">
                            <span class="text-gray-400 text-sm">Taxa de Juros</span>
                            <span class="text-gray-300 text-sm font-medium">@ativo.TaxaJuro (@ativo.TipoTaxa)</span>
                        </div>
                    }
                </div>

                <!-- Profit/Loss -->
                <div class="mt-4 pt-4 border-t border-gray-700">
                    <div class="flex justify-between items-center">
                        <span class="text-gray-400 text-sm">Lucro/Preju√≠zo</span>
                        <div class="flex items-center">
                            @if (lucroPositivo)
                            {
                                <svg class="w-4 h-4 text-green-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
                                </svg>
                                <span class="text-green-400 font-semibold">@ativo.Lucro</span>
                            }
                            else
                            {
                                <svg class="w-4 h-4 text-red-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
                                </svg>
                                <span class="text-red-400 font-semibold">@ativo.Lucro</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Assets Table View -->
    <div id="assetsTable" class="hidden bg-gray-900/50 backdrop-blur-sm border border-gray-800 rounded-xl overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-700">
                <thead class="bg-gray-800">
                    <tr>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Ativo</th>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Tipo</th>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Carteira</th>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Quantidade</th>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Pre√ßo</th>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Taxa</th>
                        <th scope="col" class="px-6 py-4 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Lucro/Preju√≠zo</th>
                        <th scope="col" class="relative px-6 py-4"><span class="sr-only">A√ß√µes</span></th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-700">
                    @foreach (var ativo in ativos)
                    {
                        var lucroValor = decimal.Parse(ativo.Lucro.Replace("‚Ç¨", "").Replace(",", ""));
                        var lucroPositivo = lucroValor >= 0;
                        
                        <tr class="asset-row hover:bg-gray-800/50 transition-colors cursor-pointer" 
                            data-nome="@ativo.Nome" 
                            data-tipo="@ativo.Tipo" 
                            data-carteira="@ativo.Carteira"
                            onclick="abrirDetalhesAtivo('@ativo.Nome', '@ativo.Tipo', '@ativo.Carteira', '@ativo.Quantidade', '@ativo.PrecoCompra', '@ativo.Lucro', '@ativo.TaxaJuro', '@ativo.TipoTaxa')">
                            
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="w-10 h-10 bg-gradient-to-br from-gray-700 to-gray-800 rounded-lg flex items-center justify-center text-lg mr-3">
                                        @ativo.Icon
                                    </div>
                                    <div>
                                        <div class="text-sm font-medium text-white">@ativo.Nome</div>
                                    </div>
                                </div>
                            </td>
                            
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-@(ativo.Tipo == "Residencial" ? "orange" : ativo.Tipo == "A√ß√£o" ? "green" : ativo.Tipo == "Criptomoeda" ? "yellow" : ativo.Tipo == "Fundo Imobili√°rio" || ativo.Tipo == "Fundo" ? "indigo" : "blue")-500/20 text-@(ativo.Tipo == "Residencial" ? "orange" : ativo.Tipo == "A√ß√£o" ? "green" : ativo.Tipo == "Criptomoeda" ? "yellow" : ativo.Tipo == "Fundo Imobili√°rio" || ativo.Tipo == "Fundo" ? "indigo" : "blue")-300">
                                    @ativo.Tipo
                                </span>
                            </td>
                            
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">@ativo.Carteira</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">@ativo.Quantidade.ToString("N2")</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">@ativo.PrecoCompra</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                                @if (ativo.TaxaJuro != "N/A")
                                {
                                    <span>@ativo.TaxaJuro</span>
                                    <span class="text-gray-400 block text-xs">(@ativo.TipoTaxa)</span>
                                }
                                else
                                {
                                    <span class="text-gray-500">N/A</span>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm">
                                <div class="flex items-center">
                                    @if (lucroPositivo)
                                    {
                                        <svg class="w-4 h-4 text-green-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
                                        </svg>
                                        <span class="text-green-400 font-medium">@ativo.Lucro</span>
                                    }
                                    else
                                    {
                                        <svg class="w-4 h-4 text-red-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
                                        </svg>
                                        <span class="text-red-400 font-medium">@ativo.Lucro</span>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <button class="text-gray-400 hover:text-white transition-colors" onclick="event.stopPropagation(); abrirMenuAcoes('@ativo.Nome')">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                                    </svg>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- New Asset Modal -->
<div id="modalNovoAtivo" class="fixed inset-0 bg-black/60 backdrop-blur-sm z-50 hidden modal-container">
    <div class="bg-gray-900 border border-gray-700 rounded-2xl shadow-2xl w-full max-w-2xl mx-4 max-h-[90vh] overflow-hidden modal-dialog">
        <div class="bg-gradient-to-r from-primary-600 to-primary-700 p-6">
            <div class="flex items-center justify-between">
                <h3 class="text-xl font-bold text-white">Adicionar Novo Ativo</h3>
                <button onclick="fecharModalNovoAtivo()" class="text-white/80 hover:text-white transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>
        
        <div class="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
            <form id="formNovoAtivo" class="space-y-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Nome do Ativo</label>
                        <input type="text" id="nomeAtivo" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500" placeholder="Ex: Casa em Lisboa">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Tipo de Ativo</label>
                        <select id="tipoAtivo" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500">
                            <option value="">Selecione o tipo</option>
                            <option value="Residencial">üè† Residencial</option>
                            <option value="Fundo Imobili√°rio">üè¶ Fundo Imobili√°rio</option>
                            <option value="A√ß√£o">üìà A√ß√£o</option>
                            <option value="Criptomoeda">ü™ô Criptomoeda</option>
                            <option value="Renda Fixa">üíµ Renda Fixa</option>
                            <option value="Fundo">üíº Fundo</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Carteira</label>
                        <select id="carteiraAtivo" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500">
                            <option value="">Selecione a carteira</option>
                            <option value="Carteira Alpha">Carteira Alpha</option>
                            <option value="Carteira Beta">Carteira Beta</option>
                            <option value="Carteira Eta">Carteira Eta</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Quantidade</label>
                        <input type="number" id="quantidadeAtivo" step="0.01" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500" placeholder="1.00">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Pre√ßo de Compra (‚Ç¨)</label>
                        <input type="number" id="precoCompra" step="0.01" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500" placeholder="100.00">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Taxa de Juros (%)</label>
                        <input type="number" id="taxaJuros" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500" placeholder="3.5">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Tipo de Taxa</label>
                        <select id="tipoTaxa" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500">
                            <option value="N/A">N/A</option>
                            <option value="Fixa">Fixa</option>
                            <option value="Vari√°vel">Vari√°vel</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-2">Lucro/Preju√≠zo Atual (‚Ç¨)</label>
                        <input type="number" id="lucroAtual" step="0.01" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-primary-500" placeholder="0.00">
                    </div>
                </div>
                
                <div class="flex space-x-4 pt-4">
                    <button type="button" onclick="fecharModalNovoAtivo()" class="flex-1 px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white font-medium rounded-lg transition-colors">
                        Cancelar
                    </button>
                    <button type="submit" class="flex-1 px-6 py-3 bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 text-white font-medium rounded-lg transition-all">
                        Adicionar Ativo
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Asset Details Modal -->
<div id="modalDetalhesAtivo" class="fixed inset-0 bg-black/60 backdrop-blur-sm z-50 hidden modal-container">
    <div class="bg-gray-900 border border-gray-700 rounded-2xl shadow-2xl w-full max-w-4xl mx-4 max-h-[90vh] overflow-hidden modal-dialog">
        <div class="bg-gradient-to-r from-primary-600 to-primary-700 p-6">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                    <div id="modalAtivoIcon" class="w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center text-xl">üè†</div>
                    <div>
                        <h3 id="modalAtivoNome" class="text-xl font-bold text-white">Casa em Lisboa</h3>
                        <p id="modalAtivoTipo" class="text-white/80">Residencial</p>
                    </div>
                </div>
                <button onclick="fecharModalDetalhesAtivo()" class="text-white/80 hover:text-white transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>
        
        <div class="p-6">
            <!-- Asset Summary -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                <div class="bg-gray-800/50 border border-gray-700 rounded-lg p-4">
                    <p class="text-gray-400 text-sm">Carteira</p>
                    <p id="modalAtivoCarteira" class="text-white font-semibold">Carteira Alpha</p>
                </div>
                <div class="bg-gray-800/50 border border-gray-700 rounded-lg p-4">
                    <p class="text-gray-400 text-sm">Quantidade</p>
                    <p id="modalAtivoQuantidade" class="text-white font-semibold">1.00</p>
                </div>
                <div class="bg-gray-800/50 border border-gray-700 rounded-lg p-4">
                    <p class="text-gray-400 text-sm">Pre√ßo de Compra</p>
                    <p id="modalAtivoPreco" class="text-white font-semibold">‚Ç¨350,000</p>
                </div>
                <div class="bg-gray-800/50 border border-gray-700 rounded-lg p-4">
                    <p class="text-gray-400 text-sm">Lucro/Preju√≠zo</p>
                    <p id="modalAtivoLucro" class="font-semibold">‚Ç¨-28,550</p>
                </div>
            </div>
            
            <!-- Performance Chart -->
            <div class="bg-gray-800/30 border border-gray-700 rounded-lg p-6 mb-6">
                <h4 class="text-lg font-semibold text-white mb-4">Hist√≥rico de Performance</h4>
                <div class="h-64 flex items-center justify-center text-gray-400">
                    <div class="text-center">
                        <svg class="w-12 h-12 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"></path>
                        </svg>
                        <p>Gr√°fico de performance ser√° exibido aqui</p>
                    </div>
                </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="flex space-x-3">
                <button class="flex-1 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors">
                    Editar Ativo
                </button>
                <button class="flex-1 px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-colors">
                    Ver Hist√≥rico
                </button>
                <button class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors">
                    Excluir
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div id="toast-container" class="fixed bottom-4 right-4 z-50 space-y-2"></div>

<script>
// View toggle functionality
let currentView = 'grid';

document.getElementById('viewGrid').addEventListener('click', function() {
    currentView = 'grid';
    document.getElementById('assetsGrid').classList.remove('hidden');
    document.getElementById('assetsTable').classList.add('hidden');
    
    this.classList.add('bg-primary-600', 'text-white');
    this.classList.remove('bg-gray-700', 'text-gray-300');
    document.getElementById('viewTable').classList.remove('bg-primary-600', 'text-white');
    document.getElementById('viewTable').classList.add('bg-gray-700', 'text-gray-300');
});

document.getElementById('viewTable').addEventListener('click', function() {
    currentView = 'table';
    document.getElementById('assetsTable').classList.remove('hidden');
    document.getElementById('assetsGrid').classList.add('hidden');
    
    this.classList.add('bg-primary-600', 'text-white');
    this.classList.remove('bg-gray-700', 'text-gray-300');
    document.getElementById('viewGrid').classList.remove('bg-primary-600', 'text-white');
    document.getElementById('viewGrid').classList.add('bg-gray-700', 'text-gray-300');
});

// Search and filter functionality
function filterAssets() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const tipoFilter = document.getElementById('tipoFilter').value;
    const carteiraFilter = document.getElementById('carteiraFilter').value;
    
    const cards = document.querySelectorAll('.asset-card');
    const rows = document.querySelectorAll('.asset-row');
    
    cards.forEach(card => {
        const nome = card.dataset.nome.toLowerCase();
        const tipo = card.dataset.tipo;
        const carteira = card.dataset.carteira;
        
        const matchesSearch = nome.includes(searchTerm);
        const matchesTipo = !tipoFilter || tipo === tipoFilter;
        const matchesCarteira = !carteiraFilter || carteira === carteiraFilter;
        
        if (matchesSearch && matchesTipo && matchesCarteira) {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
    
    rows.forEach(row => {
        const nome = row.dataset.nome.toLowerCase();
        const tipo = row.dataset.tipo;
        const carteira = row.dataset.carteira;
        
        const matchesSearch = nome.includes(searchTerm);
        const matchesTipo = !tipoFilter || tipo === tipoFilter;
        const matchesCarteira = !carteiraFilter || carteira === carteiraFilter;
        
        if (matchesSearch && matchesTipo && matchesCarteira) {
            row.style.display = 'table-row';
        } else {
            row.style.display = 'none';
        }
    });
}

document.getElementById('searchInput').addEventListener('input', filterAssets);
document.getElementById('tipoFilter').addEventListener('change', filterAssets);
document.getElementById('carteiraFilter').addEventListener('change', filterAssets);

// Modal functions
function abrirModalNovoAtivo() {
    document.getElementById('modalNovoAtivo').classList.remove('hidden');
}

function fecharModalNovoAtivo() {
    document.getElementById('modalNovoAtivo').classList.add('hidden');
    document.getElementById('formNovoAtivo').reset();
}

function abrirDetalhesAtivo(nome, tipo, carteira, quantidade, preco, lucro, taxa, tipoTaxa) {
    document.getElementById('modalAtivoNome').textContent = nome;
    document.getElementById('modalAtivoTipo').textContent = tipo;
    document.getElementById('modalAtivoCarteira').textContent = carteira;
    document.getElementById('modalAtivoQuantidade').textContent = quantidade;
    document.getElementById('modalAtivoPreco').textContent = preco;
    document.getElementById('modalAtivoLucro').textContent = lucro;
    
    const lucroElement = document.getElementById('modalAtivoLucro');
    if (lucro.includes('-')) {
        lucroElement.className = 'font-semibold text-red-400';
    } else {
        lucroElement.className = 'font-semibold text-green-400';
    }
    
    document.getElementById('modalDetalhesAtivo').classList.remove('hidden');
}

function fecharModalDetalhesAtivo() {
    document.getElementById('modalDetalhesAtivo').classList.add('hidden');
}

function abrirMenuAcoes(nomeAtivo) {
    // Implementar menu de a√ß√µes
    showToast(`A√ß√µes para ${nomeAtivo}`, 'info');
}

// Export functionality
function exportarPDF() {
    showToast('Exportando para PDF...', 'info');
    // Implementar exporta√ß√£o PDF
}

// Form submission
document.getElementById('formNovoAtivo').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const nomeAtivo = document.getElementById('nomeAtivo').value;
    if (!nomeAtivo) {
        showToast('Por favor, preencha o nome do ativo', 'error');
        return;
    }
    
    // Implementar l√≥gica de adi√ß√£o de ativo
    showToast(`Ativo "${nomeAtivo}" adicionado com sucesso!`, 'success');
    fecharModalNovoAtivo();
});

// Toast notification function
function showToast(message, type = "info") {
    const toast = document.createElement("div");
    const toastId = 'toast-' + Date.now();
    toast.id = toastId;

    let iconSVG, iconColor;
    if (type === "success") {
        iconColor = "text-green-400";
        iconSVG = `<svg class="w-5 h-5 ${iconColor}" fill="none" viewBox="0 0 20 20"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m7 10 2 2 4-4m6 2a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/></svg>`;
    } else if (type === "error") {
        iconColor = "text-red-400";
        iconSVG = `<svg class="w-5 h-5 ${iconColor}" fill="none" viewBox="0 0 20 20"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/></svg>`;
    } else {
        iconColor = "text-blue-400";
        iconSVG = `<svg class="w-5 h-5 ${iconColor}" fill="none" viewBox="0 0 20 20"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/></svg>`;
    }

    toast.className = "flex items-center w-full max-w-xs p-4 space-x-4 text-gray-300 bg-gray-800 border border-gray-700 rounded-lg shadow-lg animate-slide-up";
    toast.innerHTML = `
        ${iconSVG}
        <div class="text-sm font-normal">${message}</div>
        <button type="button" class="ml-auto -mx-1.5 -my-1.5 text-gray-400 hover:text-white hover:bg-gray-700 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 inline-flex h-8 w-8" onclick="this.parentElement.remove()">
            <span class="sr-only">Fechar</span>
            <svg class="w-3 h-3" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
            </svg>
        </button>
    `;

    const container = document.getElementById("toast-container");
    container.appendChild(toast);

    setTimeout(() => {
        toast.classList.add("opacity-0", "transition-opacity", "duration-300");
        setTimeout(() => toast.remove(), 300);
    }, 4000);
}

// Close modals on escape key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        fecharModalNovoAtivo();
        fecharModalDetalhesAtivo();
    }
});

// Close modals on background click
document.getElementById('modalNovoAtivo').addEventListener('click', function(e) {
    if (e.target === this) {
        fecharModalNovoAtivo();
    }
});

document.getElementById('modalDetalhesAtivo').addEventListener('click', function(e) {
    if (e.target === this) {
        fecharModalDetalhesAtivo();
    }
});
</script>

<style>
.card-hover {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-hover:hover {
    transform: translateY(-8px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
}

.modal-container {
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-container.hidden {
    display: none;
}

.modal-dialog {
    position: relative;
    margin: auto;
}

.animate-slide-up {
    animation: slideUp 0.3s ease-out;
}

@@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.animate-fade-in {
    animation: fadeIn 0.5s ease-out;
}

@@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
</style>
